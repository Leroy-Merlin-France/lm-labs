<?xml version="1.0" ?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
  version="2.4">


  <listener>
    <listener-class>org.nuxeo.opensocial.container.server.guice.GuiceServletConfig</listener-class>
  </listener>

 <listener>
    <listener-class>
        <!-- this is a wrapper that holds off running GuiceContextListener
        (the real listener) until Nuxeo is fully initialized -->
        org.nuxeo.opensocial.servlet.ContextListenerDelayer
      </listener-class>
</listener>




 <filter>
    <filter-name>guiceFilter</filter-name>
    <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>guiceFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


<filter>
    <filter-name>authFilter</filter-name>
    <!-- this is a wrapper that holds off running the shindig
      authentication filter until the framework is fully initialized -->
    <filter-class>org.nuxeo.opensocial.servlet.AuthenticationFilterDelayer
      </filter-class>
</filter>


  <servlet-mapping> <servlet-name>default</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping>
  <filter>
    <display-name>Login Stack Cleaner</display-name>
    <filter-name>LoginStackCleaner</filter-name>
    <filter-class>org.nuxeo.platform.login.web.LoginStackCleaner</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>LoginStackCleaner</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <display-name>WebEngine Authentication Filter</display-name>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <filter-class>org.nuxeo.ecm.platform.ui.web.auth.NuxeoAuthenticationFilter</filter-class>
    <init-param>
      <param-name>byPassAuthenticationLog</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>securityDomain</param-name>
      <param-value>nuxeo-webengine</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
      </filter-name>
    <url-pattern>/nuxeo/opensocial/gadgets/ifr/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
      </filter-name>
    <url-pattern>/nuxeo/opensocial/social/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>
<filter-mapping>
    <filter-name>NuxeoAuthenticationFilter
      </filter-name>
    <url-pattern>/nuxeo/opensocial/gadgets/makeRequest</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>


<context-param>
    <param-name>guice-modules</param-name>
    <!-- NOTE NOTE NOTE -->
    <!--
        org.apache.shindig.gadgets.oauth.OAuthModule: is not in this list
        anymore because we must merge the bindings for this class with
        some other bindings provided by nuxeo

-->
    <param-value>
        org.nuxeo.opensocial.shindig.NuxeoPropertiesModule:
        org.nuxeo.opensocial.shindig.ProxyModule:
        org.nuxeo.opensocial.services.NXGuiceModule:
        org.nuxeo.opensocial.services.NuxeoServiceModule:
        org.nuxeo.opensocial.services.NuxeoCryptoModule:
        org.apache.shindig.social.core.config.SocialApiGuiceModule:
        org.nuxeo.opensocial.shindig.gadgets.NXGadgetModule:
        org.apache.shindig.common.cache.ehcache.EhCacheModule
      </param-value>
</context-param>


<servlet>
    <servlet-name>xml-to-html</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.GadgetRenderingServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>proxy</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.NXProxyServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>makeRequest</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.MakeRequestServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>concat</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.NXConcatProxyServlet
    </servlet-class>
</servlet>
<servlet>
    <servlet-name>oauthCallback</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.OAuthCallbackServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>metadata</servlet-name>
    <servlet-class>
        org.apache.shindig.gadgets.servlet.RpcServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>js</servlet-name>
    <servlet-class>org.apache.shindig.gadgets.servlet.JsServlet
      </servlet-class>
</servlet>
<servlet>
    <servlet-name>socialRestapiServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.DataServiceServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.social.handlers</param-value>
    </init-param>
</servlet>
<servlet>
    <servlet-name>socialJsonRpcServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.JsonRpcServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.social.handlers</param-value>
    </init-param>
</servlet>
<servlet>
    <servlet-name>gadgetsJsonRpcServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.JsonRpcServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.gadgets.handlers</param-value>
    </init-param>
</servlet>
<servlet>
    <servlet-name>gadgetsRestapiServlet</servlet-name>
    <servlet-class>
        org.apache.shindig.protocol.DataServiceServlet
      </servlet-class>
    <init-param>
        <param-name>handlers</param-name>
        <param-value>org.apache.shindig.gadgets.handlers</param-value>
    </init-param>
</servlet>


<servlet-mapping>
    <servlet-name>js</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/js/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>proxy</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/proxy/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>makeRequest</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/makeRequest</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>gadgetsJsonRpcServlet</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/api/rpc/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>gadgetsRestapiServlet</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/api/rest/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>concat</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/concat</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>oauthCallback</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/oauthcallback</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>xml-to-html</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/ifr</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>metadata</servlet-name>
    <url-pattern>/nuxeo/opensocial/gadgets/metadata</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>socialRestapiServlet</servlet-name>
    <url-pattern>/nuxeo/opensocial/social/rest/*</url-pattern>
</servlet-mapping>
<servlet-mapping>
    <servlet-name>socialJsonRpcServlet</servlet-name>
    <url-pattern>/nuxeo/opensocial/social/rpc/*</url-pattern>
</servlet-mapping>


  <filter-mapping>
    <filter-name>NuxeoAuthenticationFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- filter>
    <display-name>Nuxeo Request Controller Filter</display-name>
    <filter-name>NuxeoRequestController
      </filter-name>
    <filter-class>org.nuxeo.ecm.platform.web.common.requestcontroller.filter.NuxeoRequestControllerFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>NuxeoRequestController
      </filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
</filter-mapping-->

  <servlet>
    <servlet-name>Nuxeo WebEngine Servlet</servlet-name>
    <servlet-class>org.nuxeo.ecm.webengine.app.jersey.WebEngineServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Nuxeo WebEngine Servlet</servlet-name>
    <url-pattern>/we/*</url-pattern>
  </servlet-mapping>
  <filter>
    <display-name>WebEngineFilter</display-name>
    <filter-name>WebEngineFilter</filter-name>
    <filter-class>
      org.nuxeo.ecm.webengine.app.WebEngineFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>WebEngineFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
    <filter>
    <display-name>SessionCleanupFilter</display-name>
    <filter-name>SessionCleanupFilter</filter-name>
    <filter-class>
      org.nuxeo.ecm.webengine.jaxrs.session.SessionCleanupFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>SessionCleanupFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>RequestContextFilter</display-name>
    <filter-name>RequestContextFilter</filter-name>
    <filter-class>
      org.nuxeo.ecm.webengine.jaxrs.context.RequestContextFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>RequestContextFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <servlet>
    <servlet-name>Nuxeo Resource Servlet</servlet-name>
    <servlet-class>org.nuxeo.ecm.webengine.servlet.ResourceServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Nuxeo Resource Servlet</servlet-name>
    <url-pattern>/we/skin/*</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>Nuxeo Downloader</servlet-name>
    <servlet-class>
        org.nuxeo.ecm.platform.ui.web.download.DownloadServlet
      </servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>Nuxeo Downloader</servlet-name>
    <url-pattern>/nxbigfile/*</url-pattern>
</servlet-mapping>

  <!-- NXThemes -->
  <servlet>
    <servlet-name>NXThemes Resource Library</servlet-name>
    <servlet-class>org.nuxeo.theme.html.servlets.Resources</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>NXThemes Resource Library</servlet-name>
    <url-pattern>/nuxeo/nxthemes-lib/*</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>NXThemes CSS</servlet-name>
    <servlet-class>org.nuxeo.theme.html.servlets.Styles</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>NXThemes CSS</servlet-name>
    <url-pattern>/nuxeo/nxthemes-css/*</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>NXThemes Negotiation Selector</servlet-name>
    <servlet-class>org.nuxeo.theme.html.servlets.NegotiationSelector</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>NXThemes Negotiation Selector</servlet-name>
    <url-pattern>/nuxeo/nxthemes-select/*</url-pattern>
  </servlet-mapping>

    <servlet>
       <servlet-name>UploadServlet</servlet-name>
       <servlet-class>org.nuxeo.gwt.habyt.upload.server.UploadServlet</servlet-class>
     </servlet>

     <servlet-mapping>
       <servlet-name>UploadServlet</servlet-name>
       <url-pattern>/gwtContainer/upload</url-pattern>
     </servlet-mapping>
     <servlet-mapping>
       <servlet-name>UploadServlet</servlet-name>
       <url-pattern>/gwtContainer/upload/*</url-pattern>
    </servlet-mapping>
</web-app>
